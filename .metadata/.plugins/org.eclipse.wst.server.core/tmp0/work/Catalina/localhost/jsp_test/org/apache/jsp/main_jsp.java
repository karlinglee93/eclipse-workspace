/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.88
 * Generated at: 2018-07-05 06:14:05 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.io.*;
import java.util.*;

public final class main_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"utf-8\">\r\n");
      out.write("<title>密标接口文档</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<ul>\r\n");
      out.write("\r\n");
      out.write("\t");
 String level = new String((request.getParameter("level")).getBytes("ISO-8859-1"),"UTF-8"); 
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t");
 String period = new String((request.getParameter("period")).getBytes("ISO-8859-1"),"UTF-8"); 
      out.write('\r');
      out.write('\n');
      out.write('	');
 String condition = new String((request.getParameter("condition")).getBytes("ISO-8859-1"),"UTF-8"); 
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t");
 String status = new String((request.getParameter("status")).getBytes("ISO-8859-1"),"UTF-8"); 
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t");
 String id = new String((request.getParameter("id")).getBytes("ISO-8859-1"),"UTF-8"); 
      out.write('\r');
      out.write('\n');
      out.write('	');
 String name = new String((request.getParameter("name")).getBytes("ISO-8859-1"),"UTF-8"); 
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t");
 String id_organs = new String((request.getParameter("id_organs")).getBytes("ISO-8859-1"),"UTF-8"); 
      out.write('\r');
      out.write('\n');
      out.write('	');
 String name_organs = new String((request.getParameter("name_organs")).getBytes("ISO-8859-1"),"UTF-8"); 
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t");
 String description = new String((request.getParameter("description")).getBytes("ISO-8859-1"),"UTF-8"); 
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t");
 String type = new String((request.getParameter("type")).getBytes("ISO-8859-1"),"UTF-8"); 
      out.write('\r');
      out.write('\n');
      out.write('	');
 String description_basises = new String((request.getParameter("description_basises")).getBytes("ISO-8859-1"),"UTF-8"); 
      out.write('\r');
      out.write('\n');
      out.write('	');
 String id_normalItems = new String((request.getParameter("id_normalItems")).getBytes("ISO-8859-1"),"UTF-8"); 
      out.write('\r');
      out.write('\n');
      out.write('	');
 String name_normalItems = new String((request.getParameter("name_normalItems")).getBytes("ISO-8859-1"),"UTF-8"); 
      out.write('\r');
      out.write('\n');
      out.write('	');
 String id_normalItems_1 = new String((request.getParameter("id_normalItems_1")).getBytes("ISO-8859-1"),"UTF-8"); 
      out.write('\r');
      out.write('\n');
      out.write('	');
 String name_normalItems_1 = new String((request.getParameter("name_normalItems_1")).getBytes("ISO-8859-1"),"UTF-8"); 
      out.write("\r\n");
      out.write("\r\n");
      out.write("String label =\r\n");
      out.write("\t\t\t\t\"{\\\"algoSpecId\\\":1,\\\"algoSpecVersion\\\":1,\\\"authority\\\":{},\\\"basises\\\":{\\\"description\\\":\\\"");
      out.print(description_basises);
      out.write("\\\",\"\r\n");
      out.write("\t\t\t\t+ \"\\\"normalItems\\\":[{\\\"duration\\\":{\\\"period\\\":\\\"");
      out.print(period);
      out.write("\\\"},\\\"id\\\":\\\"");
      out.print(id_normalItems);
      out.write("\\\",\"\r\n");
      out.write("\t\t\t\t+ \"\\\"level\\\":");
      out.print(level);
      out.write(",\\\"name\\\":\\\" ");
      out.print(name_normalItems);
      out.write("\\\"},\"\r\n");
      out.write("\t\t\t\t+ \"{\\\"duration\\\":{\\\"period\\\":\\\"");
      out.print(period);
      out.write("\\\"},\\\"id\\\":\\\"");
      out.print(id_normalItems_1);
      out.write("\\\",\"\r\n");
      out.write("\t\t\t\t+ \"\\\"level\\\":");
      out.print(level);
      out.write(",\\\"name\\\":\\\"");
      out.print(name_normalItems_1);
      out.write("\\\"}],\"\r\n");
      out.write("\t\t\t\t+ \"\\\"type\\\":");
      out.print(type);
      out.write("},\\\"drafter\\\":{\\\"id\\\":\\\"");
      out.print(id);
      out.write("\\\",\\\"name\\\":\\\"");
      out.print(name);
      out.write("\\\"},\"\r\n");
      out.write("\t\t\t\t+ \"\\\"duration\\\":{\\\"condition\\\":\\\"");
      out.print(condition);
      out.write("\\\",\\\"period\\\":\\\"");
      out.print(period);
      out.write("\\\"},\\\"fileAssetId\\\":\\\"\\\",\\\"fileContentId\\\":\\\"\\\",\"\r\n");
      out.write("\t\t\t\t+ \"\\\"fileUniqueId\\\":\\\"\\\",\\\"issuer\\\":{},\\\"labelSpecId\\\":1,\\\"labelSpecVersion\\\":1,\\\"level\\\":180,\"\r\n");
      out.write("\t\t\t\t+ \"\\\"organs\\\":[{\\\"id\\\":\\\"");
      out.print(id_organs);
      out.write("\\\",\\\"name\\\":\\\"");
      out.print(name_organs);
      out.write("\\\"}],\"\r\n");
      out.write("\t\t\t\t+ \"\\\"scope\\\":{\\\"description\\\":\\\"");
      out.print(description);
      out.write("\\\"},\\\"status\\\":");
      out.print(status);
      out.write("}\";\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("<!-- \r\n");
      out.write("\t// \"{\\\"algoSpecId\\\":1,\\\"algoSpecVersion\\\":1,\r\n");
      out.write("\t// \\\"fileAssetId\\\":\\\"\\\",\\\"fileContentId\\\":\\\"\\\",\" + \"\\\"fileUniqueId\\\":\\\"\\\"\r\n");
      out.write("\t//\\\"labelSpecId\\\":1,\\\"labelSpecVersion\\\":1,\\\"level\\\":180,\"\r\n");
      out.write(" -->\r\n");
      out.write("\r\n");
      out.write("</ul>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
